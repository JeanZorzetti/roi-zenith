# SOLUÇÃO DEFINITIVA: GitHub Container Registry (GHCR) - Resolve Docker Hub 401
FROM ghcr.io/linuxserver/baseimage-node:18 AS base

# Set environment variables for Node.js optimization
ENV NODE_OPTIONS="--max-old-space-size=1024"
ENV NPM_CONFIG_LOGLEVEL=warn
ENV NPM_CONFIG_FUND=false
ENV NPM_CONFIG_AUDIT_LEVEL=high

# Configure npm for reliability
RUN npm config set network-timeout 300000 \
    && npm config set fetch-timeout 300000 \
    && npm config set fetch-retries 5 \
    && npm config set registry https://registry.npmjs.org/

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install ALL dependencies (including devDependencies for building)
COPY package.json package-lock.json* ./
RUN npm install --ignore-scripts --network-timeout=300000 --fetch-timeout=300000 --fetch-retries=5 --omit=optional && npm cache clean --force

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Generate Prisma Client first
RUN npx prisma generate

# Build the application
RUN npm run build

# Production dependencies only
FROM base AS prod-deps
WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm install --omit=dev --ignore-scripts --network-timeout=300000 --fetch-timeout=300000 --fetch-retries=5 --omit=optional && npm cache clean --force

# Production image, copy all the files and run the app
FROM base AS runner
WORKDIR /app

# Build arguments for database connection
ARG DATABASE_URL
ARG DB_HOST
ARG DB_USER
ARG DB_PASSWORD
ARG DB_NAME
ARG DB_PORT

ENV NODE_ENV=production
ENV DATABASE_URL=$DATABASE_URL

# Create a non-privileged user that the app will run under
RUN groupadd --system --gid 1001 nodejs 2>/dev/null || true
RUN useradd --system --uid 1001 --gid 1001 nodejs 2>/dev/null || true

# Copy the built application
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=prod-deps --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/prisma ./prisma
COPY --chown=nodejs:nodejs package.json ./
COPY --chown=nodejs:nodejs start.sh ./

# Generate Prisma Client only (db push will run at runtime)
RUN npx prisma generate

# Make start script executable
RUN chmod +x start.sh

USER nodejs

# Expose the port that the application listens on
EXPOSE 5000

# Set the PORT environment variable
ENV PORT=5000

# Run the application with database setup
CMD ["./start.sh"]